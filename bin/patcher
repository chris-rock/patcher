#!/usr/bin/env ruby
# encoding: utf-8
# author: Patrick MÃ¼nch
# author: Christoph Hartmann
# author: Dominik Richter

require 'json'
require 'thor'
require 'terminal-table'
require 'yaml'
require_relative '../lib/inspec'

class PatcherCLI < Thor

  desc "extract REPORT", "scans an InSpec report and extracts the patches"
  option :format, :type => :string, :default => 'cli'
  option :output, :type => :string, :aliases => 'o'
  def extract(filename)
    inspec_report = load_report(filename)

    ip = Patcher::InSpecProfile.new
    patch_profile = ip.patch_profile(inspec_report)

    case options[:format]
    when 'yaml'
      data = patch_profile.to_yaml
    when 'json'
      data = JSON.pretty_generate(patch_profile)
    else
      data = display(patch_profile['packages'])
    end

    # write json content to file
    if options[:output]
      write_file(options[:output], data)
    # otherwise show the content in CLI
    else
      puts "Extracted patches from #{filename}"
      puts data
    end
  end

  private

  # load inspec profile
  def load_report(filename)
    inspec_report = JSON.parse(File.read(filename))
  end

  # write to patchlist.json
  def write_file(filename, content)
    File.open(filename,"w") do |f|
      f.write(content)
    end
  end

  def display(package_list)
    rows = []
    package_list.each { |pkg|
      rows << [pkg['name'], pkg['version']]
    }
    table = Terminal::Table.new :rows => rows, :headings => ['Package', 'Version']
  end
end

PatcherCLI.start(ARGV)
